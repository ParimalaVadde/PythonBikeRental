expected_revenue_columns = [col for col in ss.revenue if col != "stg_business_entity_id"]
    for col_name in expected_revenue_columns:
        if col_name not in transformed_json_df.columns:
            print(f"Creating {col_name} column with null values")
            dtype = (
                "date" if "date" in col_name
                else "double" if "amount" in col_name
                else "string"
            )
            transformed_json_df = transformed_json_df.withColumn(col_name, lit(None).cast(dtype))
    
    transformed_revenue = transformed_json_df.select(*ss.revenue).distinct().withColumnRenamed(
        "card_revenue__end_date", "end_date"
    )
    
    # #Remove duplicates
    # transformed_revenue = transformed_revenue.dropDuplicates()
    
    #Rename "card_revenue__end_date" â†’ "end_date"
    revenue_value_columns = ["end_date" if col == "card_revenue__end_date" else col for col in expected_revenue_columns]
    
    #Build condition: At least one of these columns must be non-null
    non_null_condition = None
    for col_name in revenue_value_columns:
        cond = col(col_name).isNotNull()
        non_null_condition = cond if non_null_condition is None else (non_null_condition | cond)
    
    #Filter out rows where all these revenue columns are NULL
    transformed_revenue = transformed_revenue.filter(non_null_condition)
