Fix the vulnerability
Find and select the solution that fixes the vulnerability listed below. Each solution may take a different approach to address the problem, but only one solution is correct.

Vulnerability Category
Injection Flaws - OS Command Injection


1)


import os
import json
import logging
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        json_file = os.path.join(BASE_DIR, '_provider.json')
        # GET providers list from JSON URL
        try:
            os.system('wget -O %s %s' % (json_file, json_url))
            with open(json_file) as f:
                providers = json.load(f)
            os.remove(json_file)
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)
		
		

import os
import json
import logging
import subprocess
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            stdout, stderr = subprocess.Popen(
                'wget -q -O - %s' % json_url,
                stdout=subprocess.PIPE, shell=True
            ).communicate()
            providers = json.loads(stdout)
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list




2)

import os
import json
import logging
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        json_file = os.path.join(BASE_DIR, '_provider.json')
        # GET providers list from JSON URL
        try:
            os.system('wget -O %s %s' % (json_file, json_url))
            with open(json_file) as f:
                providers = json.load(f)
            os.remove(json_file)
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)



import os
import json
import logging
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            providers = json.loads(os.popen('wget -q -O - %s' % json_url).read())
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)




3)

import os
import json
import logging
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        json_file = os.path.join(BASE_DIR, '_provider.json')
        # GET providers list from JSON URL
        try:
            os.system('wget -O %s %s' % (json_file, json_url))
            with open(json_file) as f:
                providers = json.load(f)
            os.remove(json_file)
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)
		
		

import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)



4)

