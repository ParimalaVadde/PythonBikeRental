Fix the vulnerability
Find and select the solution that fixes the vulnerability listed below. Each solution may take a different approach to address the problem, but only one solution is correct.

Vulnerability Category
Security Misconfiguration - Information Exposure


Code blocks
logging_config.py:4-4


1)

import os


BASE_DIR = '/tmp'
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'errors.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}



import os


BASE_DIR = os.path.dirname(os.path.abspath(__file__))
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'errors.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}



2)

import os


BASE_DIR = '/tmp'
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'errors.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}

import os


BASE_DIR = '/tmp'
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'd-zrrd654da.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'e-764gdadd.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }



3)
import os


BASE_DIR = '/tmp'
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'errors.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}


import os


BASE_DIR = os.environ.get('LOG_DIR', '/tmp')
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'd-zrrd654da.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'e-764gdadd.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}


4)

import os


BASE_DIR = '/tmp'
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'errors.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}

import os


BASE_DIR = os.environ.get('LOG_DIR', '/tmp')
LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'detailed': {
            'class': 'logging.Formatter',
            'format': ('%(asctime)s - %(name)-15s - %(process)d'
                       ' - %(levelname)s - %(module)s - %(message)s')
        },
        'simple': {
            'class': 'logging.Formatter',
            'format': '%(name)-15s - %(process)d - %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'level': 'INFO'
        },
        'file': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'detailed',
            'level': 'INFO'
        },
        'errors': {
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'errors.log'),
            'formatter': 'detailed',
            'level': 'WARNING'
        },
    },
    'loggers': {
        # default for all undefined Python modules
        '': {
            'level': LOGLEVEL,
            'handlers': ['console', 'file', 'errors'],
        }
    }
}
