Identify the vulnerability
Identify the type of vulnerability present in the code. Code blocks that are vulnerable are marked with warning icons (). Additional code blocks that may give context may be marked with lightbulb icons ().

Select Vulnerability Category
Access Control

Missing Function Level Access Control

Injection Flaws

OS Command Injection

Denial of Service

Failure to Release Resource

Improper Assets Management

Improper Assets Management

Session Handling

Cross-site Request Forgery

Sensitive Data Storage

Plain Text Storage of Sensitive Information




import os
import json
import logging
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        json_file = os.path.join(BASE_DIR, '_provider.json')
        # GET providers list from JSON URL
        try:
            os.system('wget -O %s %s' % (json_file, json_url))
            with open(json_file) as f:
                providers = json.load(f)
            os.remove(json_file)
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)
