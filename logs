Fix the vulnerability
Find and select the solution that fixes the vulnerability listed below. Each solution may take a different approach to address the problem, but only one solution is correct.

Vulnerability Category
Injection Flaws - OS Command Injection

Code blocks
provider_json.py:41-41



provider_json.py

1)
import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            providers = json.load(os.popen('cat %s/%s' % (BASE_DIR, json_file)))
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)
		
		
		
import os
import json
import logging
import requests
import subprocess
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            providers = json.loads(subprocess.check_output(
                'cat %s/%s' % (BASE_DIR, json_file), shell=True))
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)



2)

import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            providers = json.load(os.popen('cat %s/%s' % (BASE_DIR, json_file)))
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)
		
		
import os
import json
import logging
import requests
import subprocess
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            providers = json.loads(
                subprocess.run(
                    'cat %s/%s' % (BASE_DIR, json_file),
                    capture_output=True, shell=True).stdout)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list



3)
import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            providers = json.load(os.popen('cat %s/%s' % (BASE_DIR, json_file)))
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)


import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse
from subprocess import Popen, PIPE

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            out, error = Popen(
                'cat %s/%s' % (BASE_DIR, json_file),
                stdout=PIPE, shell=True
            ).communicate()
            providers = json.loads(out)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)


4)
import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        try:
            providers = json.load(os.popen('cat %s/%s' % (BASE_DIR, json_file)))
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)]
		
		
		
import os
import json
import logging
import requests
import logging.config
from provider import Provider
from config import ALLOWED_HOSTS
from urllib.parse import urlparse

logger = logging.getLogger(__name__)


class ProviderJSON(Provider):
    """Provider JSON operations"""

    def insert_from_url(self, json_url):

        o = urlparse(json_url)
        # JSON URL validation
        if not (o.scheme == 'https' and o.hostname in ALLOWED_HOSTS):
            logger.error('JSON URL host is not allowed')
            return

        providers = []
        # GET providers list from JSON URL
        try:
            r = requests.get(o.geturl())
            providers = r.json()
        except Exception as e:
            logger.error('Could not GET the JSON URL - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)

    def insert_from_file(self, json_file):

        providers = []
        BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
        file_name = os.path.basename(json_file)
        try:
            with open(os.path.join(BASE_DIR, file_name)) as f:
                providers = json.load(f)
        except Exception as e:
            logger.error('Could not open the JSON file - %s' % e)
            raise e

        # Insert Providers JSON list
        self.insert(providers)
